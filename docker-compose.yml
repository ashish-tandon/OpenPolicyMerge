version: '3.8'

services:
  # Main API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/openpolicy
      - REDIS_URL=redis://redis:6379
      - OPA_URL=http://opa:8181
    depends_on:
      - postgres
      - redis
      - opa
    volumes:
      - ./src/policies:/app/policies
    networks:
      - openpolicy-network

  # Open Policy Agent
  opa:
    image: openpolicyagent/opa:latest
    ports:
      - "8181:8181"
    command: run --server --addr :8181 --cors
    volumes:
      - ./src/policies:/policies
    networks:
      - openpolicy-network

  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      - POSTGRES_DB=openpolicy
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data
    networks:
      - openpolicy-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openpolicy-network

  # Django Backend (Parliament Data)
  django:
    build:
      context: ./src/backend/django
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/openpolicy
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src/backend/django:/app
      - ./data:/app/data
    networks:
      - openpolicy-network

  # Represent Canada Service
  represent:
    build:
      context: ./src/backend/django
      dockerfile: Dockerfile.represent
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=represent
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REPRESENT_DATA_DIR=/app/data
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src/backend/django:/app
      - ./data:/app/data
    networks:
      - openpolicy-network

  # Laravel Backend (Infrastructure)
  laravel:
    build:
      context: ./src/backend/laravel
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=openpolicy
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src/backend/laravel:/var/www/html
    networks:
      - openpolicy-network

  # Frontend Web Application
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
    depends_on:
      - api
    networks:
      - openpolicy-network

  # Mobile App (Development)
  mobile:
    build:
      context: ./src/mobile
      dockerfile: Dockerfile
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    volumes:
      - ./src/mobile:/app
    networks:
      - openpolicy-network

  # Scraper Service
  scraper:
    build:
      context: ./src/scrapers
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/openpolicy
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src/scrapers:/app
    networks:
      - openpolicy-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
      - django
      - laravel
      - represent
    networks:
      - openpolicy-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - openpolicy-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - openpolicy-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  openpolicy-network:
    driver: bridge 